package com.jyj.video.jyjplayer.db.dao;


import com.jyj.video.jyjplayer.db.bean.DownFilm;
import com.jyj.video.jyjplayer.db.bean.Download;
import com.jyj.video.jyjplayer.db.bean.Duration;
import com.jyj.video.jyjplayer.db.bean.Folder;
import com.jyj.video.jyjplayer.db.bean.Subtitle;
import com.jyj.video.jyjplayer.db.bean.Thumbnail;
import com.jyj.video.jyjplayer.db.bean.Video;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import java.util.Map;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig downFilmDaoConfig;
    private final DaoConfig downloadDaoConfig;
    private final DaoConfig durationDaoConfig;
    private final DaoConfig folderDaoConfig;
    private final DaoConfig subtitleDaoConfig;
    private final DaoConfig thumbnailDaoConfig;
    private final DaoConfig videoDaoConfig;

    private final DownFilmDao downFilmDao;
    private final DownloadDao downloadDao;
    private final DurationDao durationDao;
    private final FolderDao folderDao;
    private final SubtitleDao subtitleDao;
    private final ThumbnailDao thumbnailDao;
    private final VideoDao videoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        downFilmDaoConfig = daoConfigMap.get(DownFilmDao.class).clone();
        downFilmDaoConfig.initIdentityScope(type);

        downloadDaoConfig = daoConfigMap.get(DownloadDao.class).clone();
        downloadDaoConfig.initIdentityScope(type);

        durationDaoConfig = daoConfigMap.get(DurationDao.class).clone();
        durationDaoConfig.initIdentityScope(type);

        folderDaoConfig = daoConfigMap.get(FolderDao.class).clone();
        folderDaoConfig.initIdentityScope(type);

        subtitleDaoConfig = daoConfigMap.get(SubtitleDao.class).clone();
        subtitleDaoConfig.initIdentityScope(type);

        thumbnailDaoConfig = daoConfigMap.get(ThumbnailDao.class).clone();
        thumbnailDaoConfig.initIdentityScope(type);

        videoDaoConfig = daoConfigMap.get(VideoDao.class).clone();
        videoDaoConfig.initIdentityScope(type);

        downFilmDao = new DownFilmDao(downFilmDaoConfig, this);
        downloadDao = new DownloadDao(downloadDaoConfig, this);
        durationDao = new DurationDao(durationDaoConfig, this);
        folderDao = new FolderDao(folderDaoConfig, this);
        subtitleDao = new SubtitleDao(subtitleDaoConfig, this);
        thumbnailDao = new ThumbnailDao(thumbnailDaoConfig, this);
        videoDao = new VideoDao(videoDaoConfig, this);

        registerDao(DownFilm.class, downFilmDao);
        registerDao(Download.class, downloadDao);
        registerDao(Duration.class, durationDao);
        registerDao(Folder.class, folderDao);
        registerDao(Subtitle.class, subtitleDao);
        registerDao(Thumbnail.class, thumbnailDao);
        registerDao(Video.class, videoDao);
    }

    public void clear() {
        downFilmDaoConfig.clearIdentityScope();
        downloadDaoConfig.clearIdentityScope();
        durationDaoConfig.clearIdentityScope();
        folderDaoConfig.clearIdentityScope();
        subtitleDaoConfig.clearIdentityScope();
        thumbnailDaoConfig.clearIdentityScope();
        videoDaoConfig.clearIdentityScope();
    }

    public DownFilmDao getDownFilmDao() {
        return downFilmDao;
    }

    public DownloadDao getDownloadDao() {
        return downloadDao;
    }

    public DurationDao getDurationDao() {
        return durationDao;
    }

    public FolderDao getFolderDao() {
        return folderDao;
    }

    public SubtitleDao getSubtitleDao() {
        return subtitleDao;
    }

    public ThumbnailDao getThumbnailDao() {
        return thumbnailDao;
    }

    public VideoDao getVideoDao() {
        return videoDao;
    }

}
